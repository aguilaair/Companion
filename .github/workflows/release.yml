on:
  release:
    types: # This configuration does not affect the page_build event above
      - created

name: Release Artifacts

jobs:
  build-linux:
    name: "Build Linux"
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2.3.4

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@master

      - name: Install Linux build tools
        run: sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev libblkid-dev liblzma-dev

      - name: Enable desktop
        run: flutter config --enable-linux-desktop

      - name: Install Cider
        run: flutter pub global activate cider

      - name: Flutter get packages
        run: flutter pub get
        
      - name: Set new Flutter version
        run: cider version ${{ github.event.release.tag_name }}
        
      - name: Flutter get packages (again)
        run: flutter pub get
        
      - name: Write constants
        uses: DamianReeves/write-file-action@v1.0
        with:
          path: lib/constants.dart
          contents: |
            const kNavigationWidth = 65.0;
            const kNavigationWidthExtended = 180.0;
            const kAvailableChannels = ['beta', 'dev', 'stable'];
            const kMasterChannel = 'master';
            const appVersion = "${{ github.event.release.tag_name }}";
          write-mode: overwrite

      - name: Flutter build app
        run: flutter build linux

      - name: Compress artifacts
        uses: TheDoctor0/zip-release@0.4.1
        with:
          path: ./build/linux/release/bundle
          filename: linux-${{ github.event.release.tag_name }}.zip

      - name: Upload files to a GitHub release
        # You may pin to the exact commit or the version.
        # uses: svenstaro/upload-release-action@483c1e56f95e88835747b1c7c60581215016cbf2
        uses: svenstaro/upload-release-action@2.2.1
        with:
          # GitHub token.
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          # Local file to upload.
          file: linux-${{ github.event.release.tag_name }}.zip
          # Tag to use as a release.
          tag: ${{ github.ref }}
  build-macos:
    name: "Build MacOS"
    runs-on: macos-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2.3.4

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@master

      - name: Set Up XCode
        uses: devbotsxyz/xcode-select@v1.1.0

      - name: Enable desktop
        run: flutter config --enable-macos-desktop

      - name: Install Cider
        run: flutter pub global activate cider

      - name: Flutter get packages
        run: flutter pub get
        
      - name: Set new Flutter version
        run: cider version ${{ github.event.release.tag_name }}
        
      - name: Flutter get packages (again)
        run: flutter pub get
        
      - name: Write constants
        uses: DamianReeves/write-file-action@v1.0
        with:
          path: lib/constants.dart
          contents: |
            const kNavigationWidth = 65.0;
            const kNavigationWidthExtended = 180.0;
            const kAvailableChannels = ['beta', 'dev', 'stable'];
            const kMasterChannel = 'master';
            const appVersion = "${{ github.event.release.tag_name }}";
          write-mode: overwrite

      - name: Flutter build app
        run: flutter build macos

      - name: Compress artifacts
        run: zip -r macos-${{ github.event.release.tag_name }}.zip build/macos/Build/Products/Release/Companion.app

      - name: Upload files to a GitHub release
        # You may pin to the exact commit or the version.
        # uses: svenstaro/upload-release-action@483c1e56f95e88835747b1c7c60581215016cbf2
        uses: svenstaro/upload-release-action@2.2.1
        with:
          # GitHub token.
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          # Local file to upload.
          file: macos-${{ github.event.release.tag_name }}.zip
          # Tag to use as a release.
          tag: ${{ github.ref }}
  build-windows:
    name: "Build Windows"
    runs-on: windows-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2.3.4

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@master

      - name: Enable desktop
        run: flutter config --enable-windows-desktop
        
      - name: Install Cider
        run: flutter pub global activate cider

      - name: Flutter get packages
        run: flutter pub get
        
      - name: Set new Flutter version
        run: cider version ${{ github.event.release.tag_name }}
        
      - name: Write MSIX
        uses: DamianReeves/write-file-action@v1.0
        with:
          path: lib/constants.dart
          contents: |
            msix_config:
              display_name: Companion
              publisher_display_name: Eduardo Moreno
              identity_name: dev.eduardom.Companion
              msix_version: ${{ github.event.release.tag_name }}.0
              logo_path: .\assets\fvm-icon.png
              start_menu_icon_path: .\assets\icon.png
              tile_icon_path: .\assets\icon.png
              icons_background_color: #ffffff
              architecture: x64
              capabilities: "internetClient,removableStorage"
          write-mode: append
        
      - name: Flutter get packages (again)
        run: flutter pub get

      - name: Write constants
        uses: DamianReeves/write-file-action@v1.0
        with:
          path: lib/constants.dart
          contents: |
            const kNavigationWidth = 65.0;
            const kNavigationWidthExtended = 180.0;
            const kAvailableChannels = ['beta', 'dev', 'stable'];
            const kMasterChannel = 'master';
            const appVersion = "${{ github.event.release.tag_name }}";
          write-mode: overwrite
          
      - name: Flutter build app
        run: flutter build windows
        
      - name: Create MSIX
        run: flutter pub run msix:create

      - name: Compress artifacts
        run: tar.exe -a -c -f windows-${{ github.event.release.tag_name }}.zip build/windows/Runner/release

      - name: Upload files to a GitHub release
        # You may pin to the exact commit or the version.
        # uses: svenstaro/upload-release-action@483c1e56f95e88835747b1c7c60581215016cbf2
        uses: svenstaro/upload-release-action@2.2.1
        with:
          # GitHub token.
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          # Local file to upload.
          file: windows-${{ github.event.release.tag_name }}.zip
          # Tag to use as a release.
          tag: ${{ github.ref }}
